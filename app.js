// ‡¶≤‡ßã‡¶ï‡¶æ‡¶≤ ‡¶°‡ßá‡¶ü‡¶æ ‡¶∞‡¶æ‡¶ñ‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø
let lists = JSON.parse(localStorage.getItem("bazarLists")) || [];
let currentListId = null;

// ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü ‡¶∞‡ßá‡¶®‡ßç‡¶°‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ
function renderLists() {
  const container = document.getElementById("listsContainer");
  container.innerHTML = "";

  lists.forEach(list => {
    const listDiv = document.createElement("div");
    listDiv.className = "list";

    // ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ
    const header = document.createElement("h2");
    header.textContent = list.name + " üìù";
    listDiv.appendChild(header);

    // ‡¶™‡ßç‡¶∞‡ßã‡¶°‡¶æ‡¶ï‡ßç‡¶ü ‡¶Ø‡ßã‡¶ó ‡¶¨‡¶æ‡¶ü‡¶®
    const addBtn = document.createElement("button");
    addBtn.textContent = "‚ûï ‡¶™‡ßç‡¶∞‡ßã‡¶°‡¶æ‡¶ï‡ßç‡¶ü ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®";
    addBtn.onclick = () => addProduct(list.id);
    listDiv.appendChild(addBtn);

    // ‡¶™‡ßç‡¶∞‡ßã‡¶°‡¶æ‡¶ï‡ßç‡¶ü ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü
    const ul = document.createElement("ul");
    let total = 0;

    list.items.forEach(item => {
      const li = document.createElement("li");
      li.textContent = `${item.name} - ${item.qty} (${item.price} ‡¶ü‡¶æ‡¶ï‡¶æ, ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ: ${item.date}) = ${item.qty * item.price} ‡¶ü‡¶æ‡¶ï‡¶æ`;

      total += item.qty * item.price;

      // Edit button
      const editBtn = document.createElement("button");
      editBtn.textContent = "‚úèÔ∏è Edit";
      editBtn.onclick = () => editProduct(list.id, item.id);

      // Delete button
      const delBtn = document.createElement("button");
      delBtn.textContent = "‚ùå Delete";
      delBtn.onclick = () => deleteProduct(list.id, item.id);

      li.appendChild(editBtn);
      li.appendChild(delBtn);
      ul.appendChild(li);
    });

    listDiv.appendChild(ul);

    // ‡¶Æ‡ßã‡¶ü ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã
    const totalP = document.createElement("p");
    totalP.textContent = `‡¶Æ‡ßã‡¶ü: ${total} ‡¶ü‡¶æ‡¶ï‡¶æ`;
    listDiv.appendChild(totalP);

    container.appendChild(listDiv);
  });

  saveData();
}

// ‡¶®‡¶§‡ßÅ‡¶® ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ
function addList() {
  const name = document.getElementById("listNameInput").value.trim();
  if (!name) {
    alert("‡¶≤‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®!");
    return;
  }
  lists.push({ id: Date.now(), name, items: [] });
  document.getElementById("listNameInput").value = "";
  renderLists();
}

// ‡¶™‡ßç‡¶∞‡ßã‡¶°‡¶æ‡¶ï‡ßç‡¶ü ‡¶´‡¶∞‡ßç‡¶Æ ‡¶ñ‡ßã‡¶≤‡¶æ
function addProduct(listId) {
  currentListId = listId;
  document.getElementById("productFormModal").style.display = "block";
  document.getElementById("productDate").value = new Date().toISOString().split("T")[0]; // default ‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ
}

// ‡¶´‡¶∞‡ßç‡¶Æ ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡¶æ
function closeProductForm() {
  document.getElementById("productFormModal").style.display = "none";
  currentListId = null;
}

// ‡¶™‡ßç‡¶∞‡ßã‡¶°‡¶æ‡¶ï‡ßç‡¶ü ‡¶∏‡ßá‡¶≠
function saveProduct() {
  const name = document.getElementById("productName").value.trim();
  const qty = parseFloat(document.getElementById("productQty").value);
  const price = parseFloat(document.getElementById("productPrice").value);
  const date = document.getElementById("productDate").value;

  if (!name || isNaN(qty) || isNaN(price) || !date) {
    alert("‡¶∏‡¶¨ ‡¶´‡¶ø‡¶≤‡ßç‡¶° ‡¶™‡ßÇ‡¶∞‡¶£ ‡¶ï‡¶∞‡ßÅ‡¶®!");
    return;
  }

  const list = lists.find(l => l.id === currentListId);
  list.items.push({ id: Date.now(), name, qty, price, date });

  // Reset form
  document.getElementById("productName").value = "";
  document.getElementById("productQty").value = "";
  document.getElementById("productPrice").value = "";
  document.getElementById("productDate").value = "";

  closeProductForm();
  renderLists();
}

// ‡¶™‡ßç‡¶∞‡ßã‡¶°‡¶æ‡¶ï‡ßç‡¶ü ‡¶è‡¶°‡¶ø‡¶ü
function editProduct(listId, itemId) {
  const list = lists.find(l => l.id === listId);
  const item = list.items.find(p => p.id === itemId);

  const name = prompt("‡¶™‡ßç‡¶∞‡ßã‡¶°‡¶æ‡¶ï‡ßç‡¶ü ‡¶®‡¶æ‡¶Æ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®:", item.name);
  const date = prompt("‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®:", item.date);
  let qty = prompt("‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®:", item.qty);
  let price = prompt("‡¶¶‡¶æ‡¶Æ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®:", item.price);

  qty = parseFloat(qty);
  price = parseFloat(price);

  if (name) item.name = name;
  if (date) item.date = date;
  if (!isNaN(qty)) item.qty = qty;
  if (!isNaN(price)) item.price = price;

  renderLists();
}

// ‡¶™‡ßç‡¶∞‡ßã‡¶°‡¶æ‡¶ï‡ßç‡¶ü ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü
function deleteProduct(listId, itemId) {
  const list = lists.find(l => l.id === listId);
  list.items = list.items.filter(p => p.id !== itemId);
  renderLists();
}

// ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶Ü‡¶™ ‡¶è‡¶ï‡ßç‡¶∏‡¶™‡ßã‡¶∞‡ßç‡¶ü
function exportBackup() {
  const data = JSON.stringify(lists);
  const blob = new Blob([data], { type: "application/json" });
  const url = URL.createObjectURL(blob);

  const a = document.createElement("a");
  a.href = url;
  a.download = "bazarlist-backup.json";
  a.click();
}

// ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶Ü‡¶™ ‡¶á‡¶Æ‡¶™‡ßã‡¶∞‡ßç‡¶ü
function importBackup(event) {
  const file = event.target.files[0];
  if (!file) return;

  const reader = new FileReader();
  reader.onload = (e) => {
    lists = JSON.parse(e.target.result);
    renderLists();
  };
  reader.readAsText(file);
}

// PDF ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° (‡¶≤‡ßã‡¶ó‡ßã‡¶∏‡¶π)
async function downloadPDF() {
  const { jsPDF } = window.jspdf;
  const doc = new jsPDF();

  // ‡¶≤‡ßã‡¶ó‡ßã ‡¶≤‡ßã‡¶°
  const loadLogo = () => {
    return new Promise((resolve) => {
      const logo = new Image();
      logo.src = "logo.png";
      logo.onload = () => resolve(logo);
    });
  };

  const logo = await loadLogo();

  // ‡¶π‡ßá‡¶°‡¶æ‡¶∞‡ßá ‡¶≤‡ßã‡¶ó‡ßã + ‡¶ü‡¶æ‡¶á‡¶ü‡ßá‡¶≤
  doc.addImage(logo, "PNG", 160, 10, 30, 30);
  doc.setFont("helvetica", "bold");
  doc.setFontSize(18);
  doc.text("üõí BazarList ‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü", 20, 25);

  let y = 50; // ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü ‡¶∂‡ßÅ‡¶∞‡ßÅ

  lists.forEach(list => {
    doc.setFontSize(14);
    doc.text(`‡¶≤‡¶ø‡¶∏‡ßç‡¶ü: ${list.name}`, 20, y);
    y += 8;

    let total = 0;
    list.items.forEach(item => {
      let line = `${item.name} - ${item.qty} (${item.price} ‡¶ü‡¶æ‡¶ï‡¶æ) ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ: ${item.date}`;
      doc.setFontSize(12);
      doc.text(line, 25, y);
      y += 7;
      total += item.qty * item.price;
    });

    doc.setFontSize(13);
    doc.text(`‡¶Æ‡ßã‡¶ü: ${total} ‡¶ü‡¶æ‡¶ï‡¶æ`, 25, y);
    y += 12;
  });

  doc.save("bazarlist.pdf");
}

// ‡¶°‡ßá‡¶ü‡¶æ ‡¶∏‡ßá‡¶≠
function saveData() {
  localStorage.setItem("bazarLists", JSON.stringify(lists));
}

// ‡¶™‡ßç‡¶∞‡¶•‡¶Æ‡¶¨‡¶æ‡¶∞ ‡¶≤‡ßã‡¶° ‡¶π‡¶≤‡ßá
renderLists();