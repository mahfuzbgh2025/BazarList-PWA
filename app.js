// ‡¶≤‡ßã‡¶ï‡¶æ‡¶≤ ‡¶°‡ßá‡¶ü‡¶æ ‡¶∞‡¶æ‡¶ñ‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø
let lists = JSON.parse(localStorage.getItem("bazarLists")) || [];

// ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü ‡¶∞‡ßá‡¶®‡ßç‡¶°‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ
function renderLists() {
  const container = document.getElementById("listsContainer");
  container.innerHTML = "";

  lists.forEach(list => {
    const listDiv = document.createElement("div");
    listDiv.className = "list";

    // ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ + ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶¨‡¶æ‡¶ü‡¶®
    const header = document.createElement("h2");
    header.textContent = list.name + " üìù";
    listDiv.appendChild(header);

    const addBtn = document.createElement("button");
    addBtn.textContent = "‚ûï ‡¶™‡ßç‡¶∞‡ßã‡¶°‡¶æ‡¶ï‡ßç‡¶ü ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®";
    addBtn.onclick = () => addProduct(list.id);
    listDiv.appendChild(addBtn);

    // ‡¶™‡ßç‡¶∞‡ßã‡¶°‡¶æ‡¶ï‡ßç‡¶ü ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü
    const ul = document.createElement("ul");
    let total = 0;

    list.products.forEach(product => {
      const li = document.createElement("li");
      li.textContent = `${product.name} - ${product.qty} (${product.price} ‡¶ü‡¶æ‡¶ï‡¶æ) = ${product.qty * product.price} ‡¶ü‡¶æ‡¶ï‡¶æ`;

      total += product.qty * product.price;

      const editBtn = document.createElement("button");
      editBtn.textContent = "‚úèÔ∏è Edit";
      editBtn.onclick = () => editProduct(list.id, product.id);

      const delBtn = document.createElement("button");
      delBtn.textContent = "‚ùå Delete";
      delBtn.onclick = () => deleteProduct(list.id, product.id);

      li.appendChild(editBtn);
      li.appendChild(delBtn);
      ul.appendChild(li);
    });

    listDiv.appendChild(ul);

    // ‡¶Æ‡ßã‡¶ü ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã
    const totalP = document.createElement("p");
    totalP.textContent = `‡¶Æ‡ßã‡¶ü: ${total} ‡¶ü‡¶æ‡¶ï‡¶æ`;
    listDiv.appendChild(totalP);

    container.appendChild(listDiv);
  });

  saveData();
}

// ‡¶®‡¶§‡ßÅ‡¶® ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ
function addList() {
  const name = document.getElementById("listNameInput").value.trim();
  if (!name) {
    alert("‡¶≤‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®!");
    return;
  }
  lists.push({ id: Date.now(), name, products: [] });
  document.getElementById("listNameInput").value = "";
  renderLists();
}

// ‡¶™‡ßç‡¶∞‡ßã‡¶°‡¶æ‡¶ï‡ßç‡¶ü ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ
function addProduct(listId) {
  const name = prompt("‡¶™‡ßç‡¶∞‡ßã‡¶°‡¶æ‡¶ï‡ßç‡¶ü ‡¶®‡¶æ‡¶Æ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®:");
  if (!name) return;

  let qty = prompt("‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®:");
  let price = prompt("‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶á‡¶â‡¶®‡¶ø‡¶ü‡ßá‡¶∞ ‡¶¶‡¶æ‡¶Æ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®:");

  qty = parseFloat(qty);
  price = parseFloat(price);

  if (isNaN(qty) || isNaN(price)) {
    alert("‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶∏‡¶†‡¶ø‡¶ï‡¶≠‡¶æ‡¶¨‡ßá ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®!");
    return;
  }

  const list = lists.find(l => l.id === listId);
  list.products.push({ id: Date.now(), name, qty, price });
  renderLists();
}

// ‡¶™‡ßç‡¶∞‡ßã‡¶°‡¶æ‡¶ï‡ßç‡¶ü ‡¶è‡¶°‡¶ø‡¶ü
function editProduct(listId, productId) {
  const list = lists.find(l => l.id === listId);
  const product = list.products.find(p => p.id === productId);

  const name = prompt("‡¶™‡ßç‡¶∞‡ßã‡¶°‡¶æ‡¶ï‡ßç‡¶ü ‡¶®‡¶æ‡¶Æ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®:", product.name);
  let qty = prompt("‡¶™‡¶∞‡¶ø‡¶Æ‡¶æ‡¶£ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®:", product.qty);
  let price = prompt("‡¶¶‡¶æ‡¶Æ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®:", product.price);

  qty = parseFloat(qty);
  price = parseFloat(price);

  if (name) product.name = name;
  if (!isNaN(qty)) product.qty = qty;
  if (!isNaN(price)) product.price = price;

  renderLists();
}

// ‡¶™‡ßç‡¶∞‡ßã‡¶°‡¶æ‡¶ï‡ßç‡¶ü ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü
function deleteProduct(listId, productId) {
  const list = lists.find(l => l.id === listId);
  list.products = list.products.filter(p => p.id !== productId);
  renderLists();
}

// ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶Ü‡¶™ ‡¶è‡¶ï‡ßç‡¶∏‡¶™‡ßã‡¶∞‡ßç‡¶ü
function exportBackup() {
  const data = JSON.stringify(lists);
  const blob = new Blob([data], { type: "application/json" });
  const url = URL.createObjectURL(blob);

  const a = document.createElement("a");
  a.href = url;
  a.download = "bazarlist-backup.json";
  a.click();
}

// ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶Ü‡¶™ ‡¶á‡¶Æ‡¶™‡ßã‡¶∞‡ßç‡¶ü
function importBackup(event) {
  const file = event.target.files[0];
  if (!file) return;

  const reader = new FileReader();
  reader.onload = (e) => {
    lists = JSON.parse(e.target.result);
    renderLists();
  };
  reader.readAsText(file);
}

// ‡¶°‡ßá‡¶ü‡¶æ ‡¶∏‡ßá‡¶≠
function saveData() {
  localStorage.setItem("bazarLists", JSON.stringify(lists));
}

// ‡¶™‡ßç‡¶∞‡¶•‡¶Æ‡¶¨‡¶æ‡¶∞ ‡¶≤‡ßã‡¶° ‡¶π‡¶≤‡ßá
renderLists();